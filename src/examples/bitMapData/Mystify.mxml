<?xml version="1.0" encoding="utf-8"?>
<ex:Example  xmlns:ex="basic.*" xmlns="http://www.adobe.com/2006/mxml"
				  creationComplete="init()">
	<Script>
		<![CDATA[
			import flash.sampler.Sample;
			
			import frocessing.color.ColorHSV;
			import frocessing.math.PerlinNoise;
			
			import mx.core.UIComponent;
			
			import spark.primitives.Graphic;
			import spark.primitives.Rect;
			
			private var color:ColorHSV;
			private var perlin:PerlinNoise;//柏林噪音
			private var c:uint = 0;
			private var t:Number = 0;
			private var bitmapData:BitmapData;
			private var tempSprite:Sprite;
			private static var segments:uint = 5;
			private static var ratio:Number = 1 / segments;
			private static var tightness:uint = 40;
			
			override public function get descriptions():Array {
				return ["轻纱般的变幻线效果"];
			}
			
			private function init():void{
				this.graphics.beginFill(0x000000);
				this.graphics.drawRect(0, 0, this.width, this.height); 
				this.graphics.endFill();
				
				var ui:UIComponent = new UIComponent();
				addChild(ui);
				
				bitmapData = new BitmapData(this.width, this.height, true, 0x00000000);
				var bitmap:Bitmap = new Bitmap(bitmapData);
				ui.addChild(bitmap);
				
				tempSprite = new Sprite();
				color = new ColorHSV();
				perlin = new PerlinNoise();
				
				addEventListener(Event.ENTER_FRAME,draw, false, 0, true);
				addEventListener(MouseEvent.CLICK, reset, false, 0, true); 
			}
			
			private function draw(evt:Event):void{
				var g:Graphics = tempSprite.graphics;
				g.clear();
				g.lineStyle(0,color.value,0.2);
				color.h = c;
				c = (c + 1) % 360;
				var points:Array = [];
				points.push(new Point(-this.width * ratio,this.height * 0.5));
				for(var i:int = 1; i <= segments+1; i++){
					var xPos:Number = i * this.width * ratio;
					var yPos:Number = perlin.noise(i * 0.25, t) * this.height;
					points.push(new Point(xPos - this.width * ratio, yPos));
				}
				t += 0.01;
				points.push(new Point(this.width * (1+ratio), this.height * 0.5)); 
				points.unshift(points[0]);
				points.push(points[points.length - 1]); 
				
				g.moveTo(points[0].x, points[0].y);
				for (var p:int = 0; p < points.length-3; p++) { 
					var p0:Point = points[p]; 
					var p1:Point = points[p+1]; 
					var p2:Point = points[p+2]; 
					var p3:Point = points[p+3]; 
					for (var s:uint = 1; s < tightness + 1; s++) { 
						var px:Number = spline(p0.x, p1.x, p2.x, p3.x, s/tightness); 
						var py:Number = spline(p0.y, p1.y, p2.y, p3.y, s/tightness); 
						g.lineTo(px, py); 
					} 
				}
				bitmapData.lock();
				bitmapData.draw(tempSprite);
				bitmapData.scroll(0,1);
				bitmapData.unlock();
			}
			
			private function spline(p0:Number, p1:Number, p2:Number, p3:Number, t:Number):Number { 
				var v0:Number = (p2 - p0) * 0.5; 
				var v1:Number = (p3 - p1) * 0.5; 
				var t2:Number = t * t; 
				var t3:Number = t2 * t; 
				return (2 * p1 - 2 * p2 + v0 + v1) * t3 + ( -3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1; 
			}
			
			private function reset(evt:MouseEvent):void { 
				bitmapData.lock(); 
				bitmapData.fillRect(bitmapData.rect, 0x00000000); 
				bitmapData.unlock(); 
			}

		]]>
	</Script>
</ex:Example>
